{"version":3,"sources":["api/api.js","components/card.js","App.js","index.js"],"names":["fetchPhotos","a","fetch","response","json","fetchUserName","username","fetchPhoto","id","Card","photo","title","count_faves","owner","useState","profile","setProfile","galleryPhoto","setGalleryPhoto","useEffect","then","res","sizes","size","source","formattedCountry","country","slice","className","src","alt","first_name","min","max","randomNum","Math","random","floor","formattedDate","onClick","alert","App","photos","setPhotos","console","log","map","element","index","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAAMA,EAAW,uCAAG,4BAAAC,EAAA,sEACKC,MACrB,uMAFgB,cACZC,EADY,gBAKLA,EAASC,OALJ,mFAAH,qDAUXC,EAAa,uCAAG,WAAgBC,GAAhB,eAAAL,EAAA,sEACGC,MAAM,2HAAD,OACiGI,EADjG,kCADR,cACdH,EADc,gBAIPA,EAASC,OAJF,mFAAH,sDAWbG,EAAU,uCAAG,WAAeC,GAAf,eAAAP,EAAA,sEACMC,MAAM,0HAAD,OACkGM,EADlG,kCADX,cACXL,EADW,gBAIJA,EAASC,OAJL,mFAAH,sDCgCDK,G,MAlDF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACNF,EAAiCE,EAAjCF,GAAIG,EAA6BD,EAA7BC,MAAOC,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,MADN,EAEIC,mBAAS,IAFb,mBAEnBC,EAFmB,KAEVC,EAFU,OAGWF,mBAAS,IAHpB,mBAGnBG,EAHmB,KAGNC,EAHM,KAI1BC,qBAAU,WACRd,EAAcQ,GAAOO,MAAK,SAACC,GACzBL,EAAWK,EAAIN,cAEhB,CAACF,IACJM,qBAAU,WACRZ,EAAWC,GAAIY,MAAK,SAACC,GACnBH,EAAgBG,EAAIC,MAAMC,KAAK,GAAGC,aAEpC,CAAChB,IACH,IAMMiB,GADUV,EAATW,QAC4B,IAAIC,MAAM,EAAG,IAGhD,OAAQ,yBAAKC,UAAU,QACb,yBAAKA,UAAW,QAChB,yBAAKA,UAAW,eACd,yBAAKC,IAAG,wDAAmDhB,EAAnD,QAAgEiB,IAAK,UAC7E,yBAAKF,UAAW,cACd,2BAAIb,EAAQgB,YACZ,2BAAIN,KAIN,6BAnBQ,SAAUO,EAAKC,GAC/B,IAAIC,EAAYC,KAAKC,UAAYH,EAAMD,GAAOA,EAC9C,OAAOG,KAAKE,MAAMH,GAkBLI,CAAc,EAAE,IADrB,MAIJ,yBAAKV,UAAW,cACd,yBAAKC,IAAKZ,EAAca,IAAK,UAG/B,yBAAKF,UAAW,UAChB,8BAAO,uBAAGA,UAAU,eAAeW,QAAS,WACxCC,MAAMhC,KADH,SAEQI,GACb,6BACF,8BAAOD,OCxBF8B,MAnBf,WAAgB,IAAD,EACiB3B,mBAAS,IAD1B,mBACJ4B,EADI,KACIC,EADJ,KAQX,OANAxB,qBAAU,WACNnB,IAAcoB,MAAK,SAACC,GAChBsB,EAAUtB,EAAIqB,OAAOhC,YAE1B,IACHkC,QAAQC,IAAIH,GACH,yBAAKd,UAAY,OACnB,yBAAKA,UAAW,WACVc,EAAOI,KAAI,SAACC,EAASC,GACtB,OAAS,yBAAKpB,UAAW,OAAQqB,IAAQD,GACrC,kBAAC,EAAD,CAAMtC,MAAUqC,IADX,QAFd,KADE,MCTbG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.4b579fd6.chunk.js","sourcesContent":["const fetchPhotos = async function () {\r\n  const response = await fetch(\r\n    \"https://www.flickr.com/services/rest/?method=flickr.interestingness.getList&api_key=ad1a207325de8a3844d698543f65a6b2&extras=date_upload&extras=count_faves&per_page=24&format=json&nojsoncallback=1\"\r\n  );\r\n\r\n  return await response.json();\r\n};\r\n\r\nexport { fetchPhotos };\r\n\r\nconst fetchUserName = async function (username) {\r\n  const response = await fetch(\r\n    `https://www.flickr.com/services/rest/?method=flickr.profile.getProfile&api_key=ad1a207325de8a3844d698543f65a6b2&user_id=${username}&format=json&nojsoncallback=1`\r\n  );\r\n  return await response.json();\r\n};\r\n\r\nexport { fetchUserName };\r\n\r\n\r\n\r\nconst fetchPhoto = async function(id){\r\n  const response = await fetch(\r\n      ` https://www.flickr.com/services/rest/?method=flickr.photos.getSizes&api_key=ad1a207325de8a3844d698543f65a6b2&photo_id=${id}&format=json&nojsoncallback=1`\r\n  );\r\n  return await response.json();\r\n}\r\nexport { fetchPhoto };","import React, { useState, useEffect } from \"react\";\r\nimport \"./card.css\";\r\nimport { fetchUserName,fetchPhoto } from \"../api/api\";\r\nconst Card = ({ photo }) => {\r\n  const { id, title, count_faves, owner} = photo;\r\n  const [profile, setProfile] = useState(\"\");\r\n  const [galleryPhoto,setGalleryPhoto]=useState('')\r\n  useEffect(() => {\r\n    fetchUserName(owner).then((res) => {\r\n      setProfile(res.profile);\r\n    });\r\n  }, [owner]);\r\n  useEffect(()=>{\r\n    fetchPhoto(id).then((res)=>{\r\n      setGalleryPhoto(res.sizes.size[4].source)\r\n    })\r\n  },[id])\r\n  const formattedDate=function (min, max) {\r\n      let randomNum = Math.random() * (max - min) + min;\r\n      return Math.floor(randomNum);\r\n  }\r\n\r\n  const {country}=profile\r\n  const formattedCountry= (country + \"\").slice(0, 15);\r\n\r\n\r\n  return( <div className=\"card\">\r\n            <div className={\"head\"}>\r\n            <div className={\"person-info\"}>\r\n              <img src={`http://farm9.staticflickr.com/8573/buddyicons/${owner}.jpg`} alt={'buddy'}/>\r\n              <div className={\"name-place\"}>\r\n                <b>{profile.first_name}</b>\r\n                <i>{formattedCountry}</i>\r\n              </div>\r\n            </div>\r\n\r\n              <div>\r\n                  {formattedDate(1,24)}h\r\n              </div>\r\n            </div>\r\n          <div className={'main-image'}>\r\n            <img src={galleryPhoto} alt={'main'}/>\r\n          </div>\r\n\r\n          <div className={\"bottom\"}>\r\n          <span ><i className=\"far fa-heart\" onClick={()=>{\r\n              alert(id)\r\n          }}> &nbsp;</i>{count_faves}</span>\r\n            <br/>\r\n          <span>{title}</span>\r\n          </div>\r\n          </div>);\r\n};\r\nexport default Card;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { fetchPhotos } from \"../src/api/api\";\r\nimport Card from \"../src/components/card\";\r\n\r\n\r\nfunction App() {\r\n    const [photos, setPhotos] = useState([]);\r\n    useEffect(() => {\r\n        fetchPhotos().then((res) => {\r\n            setPhotos(res.photos.photo);\r\n        });\r\n    }, []);\r\n    console.log(photos);\r\n    return ( <div className = \"App\" >\r\n           <div className={'masonry'}>\r\n                {photos.map((element, index) => {\r\n                return ( <div className={'item'} key = { index } >\r\n                    <Card photo = { element }/> </div>\r\n                );\r\n            })\r\n        } </div> </div>\r\n);\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}